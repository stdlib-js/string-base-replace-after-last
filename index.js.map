{"version":3,"file":"index.js","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Replaces the substring after the last occurrence of a specified search string.\n*\n* @param {string} str - input string\n* @param {string} search - search string\n* @param {string} replacement - replacement string\n* @param {integer} fromIndex - index from which to start searching\n* @returns {string} string\n*\n* @example\n* var str = 'beep boop';\n* var out = replaceAfterLast( str, ' ', 'foo', str.length );\n* // returns 'beep foo'\n*\n* @example\n* var str = 'beep boop';\n* var out = replaceAfterLast( str, 'p', 'foo', str.length );\n* // returns 'beep boopfoo'\n*\n* @example\n* var str = 'Hello World!';\n* var out = replaceAfterLast( str, '', 'foo',  str.length );\n* // returns 'Hello World!'\n*\n* @example\n* var str = 'Hello World!';\n* var out = replaceAfterLast( str, 'xyz', 'foo', str.length );\n* // returns 'Hello World!'\n*\n* @example\n* var str = 'beep boop baz';\n* var out = replaceAfterLast( str, 'p b', 'foo', str.length );\n* // returns 'beep boop bfoo'\n*\n* @example\n* var str = 'beep boop baz';\n* var out = replaceAfterLast( str, 'p b', 'foo', 6 );\n* // returns 'beep bfoo'\n*/\nfunction replaceAfterLast( str, search, replacement, fromIndex ) {\n\tvar idx;\n\tif ( fromIndex < 0 ) {\n\t\tfromIndex += str.length;\n\t\tif ( fromIndex < 0 ) {\n\t\t\treturn str;\n\t\t}\n\t}\n\tidx = str.lastIndexOf( search, fromIndex );\n\tif ( str === '' || search === '' || replacement === '' || idx < 0 ) {\n\t\treturn str;\n\t}\n\treturn str.substring( 0, idx + search.length ) + replacement;\n}\n\n\n// EXPORTS //\n\nexport default replaceAfterLast;\n"],"names":["str","search","replacement","fromIndex","idx","length","lastIndexOf","substring"],"mappings":";gDA6DA,SAA2BA,EAAKC,EAAQC,EAAaC,GACpD,IAAIC,EACJ,OAAKD,EAAY,IAChBA,GAAaH,EAAIK,QACA,EACTL,GAGTI,EAAMJ,EAAIM,YAAaL,EAAQE,GAClB,KAARH,GAAyB,KAAXC,GAAiC,KAAhBC,GAAsBE,EAAM,EACxDJ,EAEDA,EAAIO,UAAW,EAAGH,EAAMH,EAAOI,QAAWH,EAClD"}